// stdout($string, $type)
// 
// **[private:{output}]** Output to terminal
// 
// Weight: 0
// 
// $string - **{string}** ***Text to output to terminal***
// $type - **{'debug'|'warn'|'error'}** ***Type of output***
// 
// Styleguide Functions.stdout
use('../../lib/stdout.js');

// comment($string)
// 
// **[private:{output}]** Output a message to CSS comments
// 
// Weight: -10
// 
// $string - **{string}** ***Message to output***
// 
// Styleguide Mixins.comment
comment($string) {
  unquote('/* ' + replace('(?![\t ])\s\s*', '\n * ', $string) + ' */');
}

// _true-message($message, $output, $comment-padding)
// 
// **[private:{output}]** Output a message to CSS comments, or commandline terminal (via debug/warn)
// 
// Weight: 0
// 
// $message - **{string}** ***Message to output***
// $output = 'comments' - **{string}** ***Type of output, either `comments`, `terminal`, `debug` or `warn`***
// 
// Styleguide Mixins._true-message
_true-message($message, $output = 'comments', $comment-padding = 0) {
  $pad = '';

  if ($comment-padding > 0) {
    for $i in ((0)..(($comment-padding) - 1)) {
      $pad = $pad + ' ';
    }
  }

  for $line in ($message) {
    $comments = index($output, 'comments');

    if ($comments != null && $comments >= 0) {
      $tmp = $pad + $line;

      comment($tmp);
    }

    $debug = index($output, 'debug');
    $terminal = index($output, 'terminal');
    if (($debug != null && $debug >= 0) || ($terminal != null && $terminal >= 0)) {
      stdout($line);
    }

    $warn = index($output, 'warn');
    if ($warn != null && $warn >= 0) {
      stdout($line, 'warn');
    }
  }
}
